/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package engineering;

import connection.MyConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Arrays;
import java.sql.Array;
/**
 *
 * @author Jayaprakash
 */
public class checkrank extends javax.swing.JFrame {

    /**
     * Creates new form checkrank
     */
    public checkrank() {
        initComponents();
    }
     private int cut;
     private String uid;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ENGINEERING SEAT SELCTION");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(118, 118, 118))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(33, 33, 33))
        );

        jButton1.setText("back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("ENTER UNIQUE STUDENT ID");

        jButton2.setText("submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField1)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                homepage ho=new homepage();
                dispose();
                ho.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          String uid=jTextField1.getText();
          int i,q,s,rows;
          //String m1;
          int cutoff1;

           try {
            Connection con = MyConnection.getConnection();
            PreparedStatement ps;
            ps = con.prepareStatement("select ranks,category from user where Uid=? ");  
            ps.setString(1, jTextField1.getText());
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            q = stData.getColumnCount();
            System.out.println(q);

            while (rs.next()) {
                    int ranks=rs.getInt("ranks");
                    String category=rs.getString("category");
                    //System.out.println("1");
                    System.out.println(category);
                    if(category.equals("GM")){
                        //System.out.println("2");
                      try{
                        PreparedStatement p1;
                        p1 = con.prepareStatement("select * from choice");
                        ResultSet r1 = p1.executeQuery();
                        System.out.println("ok");
                       
                        ResultSetMetaData stData1 = r1.getMetaData();
                        s = stData1.getColumnCount();
                        //System.out.println(s);
            
                        while (r1.next()) {
                            
                            System.out.println("hi");
                           
                                cutoff1=r1.getInt("genCutoff");
                              
                                if(cutoff1>ranks){
                                    cut=cutoff1;
                                    System.out.println(cut);
                                     /*PreparedStatement ps1;
                                     ps1 = con.prepareStatement("update user set crank=? where ranks=?");
                                     ps1.setInt(1,cut);   
                                     ps1.setInt(1,ranks); 
                                     ps1.executeUpdate();*/
                                    PreparedStatement p;
                                     p = con.prepareStatement("insert into result(crank,bname,cname,bid) select genCutoff,bname,cname,bid from choice where genCutoff=? ");
                                     p.setInt(1,cut);   
                                     p.executeUpdate();
                                     PreparedStatement ps1;
                                     ps1 = con.prepareStatement("update result set Uid=? where crank=?");
                                     ps1.setString(1,uid);   
                                     ps1.setInt(2,cut);   
                                     ps1.executeUpdate();
                                     PreparedStatement ps3;
                                     ps3 = con.prepareStatement("update branch set genSeat=genSeat-1,set tos=tos-1 where genSeat>0 and genCutoff=?");
                                     ps3.setInt(1,cut);   
                                       
                                     ps1.executeUpdate();
                                     PreparedStatement ps2;
                                     ps2 = con.prepareStatement("delete from choice");
                                     //ps1.setInt(1,ranks);   
                                     ps2.executeUpdate();
                                            
                                     
                                    //System.out.println(cut);

                                    break;
                                }
                                
                                else{
                                        System.out.println("whsdkhud");
                                        }   
                            
                            
                            //}
                               System.out.println(cut);
                        }
                        
                           /* PreparedStatement p;
                            p = con.prepareStatement("insert into result(uid,bname,cname,bid) select(uid,bname,cname,bid) from choice where genCutoff=? ");
                            p.setInt(1,cut);         
                            p.execute();
                                */
                            
                            
                          
                            
                }
                
            
           
                    
            catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
        }
                    
                
                       else if(category.equals("SCST")){
                        //System.out.println("2");
                      try{
                        PreparedStatement p1;
                        p1 = con.prepareStatement("select * from choice");
                        ResultSet r1 = p1.executeQuery();
                        System.out.println("ok");
                       
                        ResultSetMetaData stData1 = r1.getMetaData();
                        s = stData1.getColumnCount();
                        //System.out.println(s);
            
                        while (r1.next()) {
                            
                            System.out.println("hi");
                           
                                cutoff1=r1.getInt("scstCutoff");
                              
                                if(cutoff1>ranks){
                                    cut=cutoff1;
                                    System.out.println(cut);
                                     /*PreparedStatement ps1;
                                     ps1 = con.prepareStatement("update user set crank=? where ranks=?");
                                     ps1.setInt(1,cut);   
                                     ps1.setInt(1,ranks); 
                                     ps1.executeUpdate();*/
                                    PreparedStatement p;
                                     p = con.prepareStatement("insert into result(crank,bname,cname,bid) select scstCutoff,bname,cname,bid from choice where scstCutoff=? ");
                                     p.setInt(1,cut);   
                                     p.executeUpdate();
                                     PreparedStatement ps1;
                                     ps1 = con.prepareStatement("update result set Uid=? where crank=?");
                                     ps1.setString(1,uid);   
                                     ps1.setInt(2,cut);   
                                     ps1.executeUpdate();
                                     PreparedStatement ps3;
                                     ps3 = con.prepareStatement("update branch set scstSeat=scstSeat-1,set tos=tos-1 where scstSeat>0 and scstCutoff=?");
                                     ps3.setInt(1,cut);   
                                     PreparedStatement ps2;
                                     ps2 = con.prepareStatement("delete from choice");
                                     //ps1.setInt(1,ranks);   
                                     ps2.executeUpdate();
                                     
                                     
                                     
                                    //System.out.println(cut);

                                    break;
                                }
                                
                                else{
                                        System.out.println("whsdkhud");
                                        }   
                            
                            
                            //}
                               System.out.println(cut);
                        }
                        
                           /* PreparedStatement p;
                            p = con.prepareStatement("insert into result(uid,bname,cname,bid) select(uid,bname,cname,bid) from choice where genCutoff=? ");
                            p.setInt(1,cut);         
                            p.execute();
                                */
                            
                            
                        
                            
                }
                
            
           
                    
            catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
        }
                    
                     else if(category.equals("OBC")){
                        //System.out.println("2");
                      try{
                        PreparedStatement p1;
                        p1 = con.prepareStatement("select * from choice");
                        ResultSet r1 = p1.executeQuery();
                        System.out.println("ok");
                       
                        ResultSetMetaData stData1 = r1.getMetaData();
                        s = stData1.getColumnCount();
                        //System.out.println(s);
            
                        while (r1.next()) {
                            
                            System.out.println("hi");
                           
                                cutoff1=r1.getInt("obcCutoff");
                              
                                if(cutoff1>ranks){
                                    cut=cutoff1;
                                    System.out.println(cut);
                                     /*PreparedStatement ps1;
                                     ps1 = con.prepareStatement("update user set crank=? where ranks=?");
                                     ps1.setInt(1,cut);   
                                     ps1.setInt(1,ranks); 
                                     ps1.executeUpdate();*/
                                    PreparedStatement p;
                                     p = con.prepareStatement("insert into result(crank,bname,cname,bid) select obcCutoff,bname,cname,bid from choice where obcCutoff=? ");
                                     p.setInt(1,cut);   
                                     p.executeUpdate();
                                     PreparedStatement ps1;
                                     ps1 = con.prepareStatement("update result set Uid=? where crank=?");
                                     ps1.setString(1,uid);   
                                     ps1.setInt(2,cut);   
                                     ps1.executeUpdate();
                                     PreparedStatement ps3;
                                     ps3 = con.prepareStatement("update branch set obc Seat=obcSeat-1,set tos=tos-1 where obcSeat>0 and obcCutoff=?");
                                     ps3.setInt(1,cut);   
                                     PreparedStatement ps2;
                                     ps2 = con.prepareStatement("delete from choice");
                                     //ps1.setInt(1,ranks);   
                                     ps2.executeUpdate();
                                     
                                     
                                    //System.out.println(cut);

                                    break;
                                }
                                
                                else{
                                        System.out.println("whsdkhud");
                                        }   
                            
                            
                            //}
                               System.out.println(cut);
                        }
  
                }
                
            
           
                    
            catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
        }
            }
                    
            PreparedStatement ps5;
            ps5 = con.prepareStatement("select * from result where Uid=? ");
            ps5.setString(1,uid);
            
            
            
            ResultSet rss = ps5.executeQuery();
            //String s0= rs.getString("Uid");
            //ResultSetMetaData stData = rs.getMetaData();
            q = stData.getColumnCount();
        
            if (rss.next()) {
                String s1= rss.getString("bid");
                String s2= rss.getString("bname");
                String s3= rss.getString("cname");
                String m1="Your seat has been allocated in "+s3+" in branch "+s2;
                    
                    JOptionPane.showMessageDialog(this,m1);
                    
                
                }
            else{
                JOptionPane.showMessageDialog(this,"Sorry no seat");
            }
           
                }
           
            
           
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }      
          
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(checkrank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(checkrank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(checkrank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(checkrank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new checkrank().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
